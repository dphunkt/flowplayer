/*This creates an animated visual rotator display object*/package org.flowplayer.model{	import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.display.Stage;	import flash.events.Event;	import flash.filters.GlowFilter;  		public class Rotator extends Sprite	{		private var holder: Sprite				public function Rotator(fill: uint = 0xFFFFFF, scale: Number = 1) : void		{			var logo:smallLogo = new smallLogo();			var n:Number = 0;			holder = new Sprite();						holder.filters = [new GlowFilter(fill, .5, 10, 10, 2, 2, false, false)];			for (var i: int = 0; i < 15; i++)			{				var pc: RotatorComponent = new RotatorComponent(fill);				pc.rotation = n;				//pc.scaleX = pc.scaleY = -i/10;				pc.alpha = i * .066;				n += 24;				holder.addChild(pc);			}			scaleX = scaleY = scale;			addChild(holder);			addChild(logo);						start();		}				public function start() : void		{			addEventListener(Event.ENTER_FRAME, update);		}				public function stop() : void		{			removeEventListener(Event.ENTER_FRAME, update);					}				private function update(event: Event) : void		{			holder.rotation += 5;		}	}}import flash.display.Shape;internal class RotatorComponent extends Shape{	public function RotatorComponent(color:uint) : void	{		/*graphics.beginFill(color);		graphics.moveTo(0, 10);		graphics.curveTo(-3, 10, -3, 15);		graphics.lineTo(-6, 20);		graphics.curveTo(-6, 20, 0, 25);		graphics.curveTo(6, 20, 6, 20);		graphics.lineTo(3, 15);		graphics.curveTo(3, 10, 0, 10);*/		graphics.beginFill(color);		graphics.drawCircle(0,50,6);		graphics.endFill();	}	}/*Copyright under the MIT open-source license to Bryan Grezeszak,therefore cannot be re-sold, etc. But you may use it in your projects,as long as you leave the commenting, and credits.This class by Bryan Grezeszak | madbunny.us | bryan@madbunny.us(\___/)(='.'=) <------ Mad Bunny Skills(")_(")*/